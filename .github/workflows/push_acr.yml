name: Deploy to Azure Container Registry

on:
  push:
    branches:
      - main

jobs:
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: azure/docker-login@v1
        with:
          login-server: 'musicologypro.azurecr.io' # default: index.docker.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          IMAGE_TAG: latest
          ACR_REGISTRY: musicologypro.azurecr.io
          ACR_REPOSITORY: musicology.pro
          DOCKERFILE: Dockerfile.FRONTEND
          NEXT_PUBLIC_API_BASE_URL: /api
          NEXT_PUBLIC_AUTH_COOKIE_KEY: authKey
        run: |
          # Build a docker container and push it to ACR so that it can be deployed to VM.
          
          echo "NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}" >> .env.local
          echo "NEXT_PUBLIC_AUTH_COOKIE_KEY=${NEXT_PUBLIC_AUTH_COOKIE_KEY}" >> .env.local

          docker build \
            --file ${DOCKERFILE} \
            --tag ${ACR_REGISTRY}/${ACR_REPOSITORY}:${IMAGE_TAG} \
            --build-arg NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL} \
            --build-arg NEXT_PUBLIC_AUTH_COOKIE_KEY=${NEXT_PUBLIC_AUTH_COOKIE_KEY} \
            --push \
            .
          
          echo "image=${ACR_REGISTRY}/$ACR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
